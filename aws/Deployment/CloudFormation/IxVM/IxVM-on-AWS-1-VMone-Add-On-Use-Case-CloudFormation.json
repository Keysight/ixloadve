{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "IxVM on AWS 1-TestAppliance Add-On Test CloudFormation",
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "EC2xCONNECTxCIDR": "18.206.107.24/29",
                "EC2xREGION": "US East (N. Virginia)",
                "REGIONxTAG": "US_EAST_1"
            },
            "us-east-2": {
                "EC2xCONNECTxCIDR": "3.16.146.0/29",
                "EC2xREGION": "US East (Ohio)",
                "REGIONxTAG": "US_EAST_2"
            },
            "us-west-1": {
                "EC2xCONNECTxCIDR": "13.52.6.112/29",
                "EC2xREGION": "US West (N. California)",
                "REGIONxTAG": "US_WEST_1"
            },
            "us-west-2": {
                "EC2xCONNECTxCIDR": "18.237.140.160/29",
                "EC2xREGION": "US West (Oregon)",
                "REGIONxTAG": "US_WEST_2"
            },
            "ap-south-1": {
                "EC2xCONNECTxCIDR": "13.233.177.0/29",
                "EC2xREGION": "Asia Pacific (Mumbai)",
                "REGIONxTAG": "AP_SOUTH_1"
            },
            "ap-northeast-2": {
                "EC2xCONNECTxCIDR": "13.209.1.56/29",
                "EC2xREGION": "Asia Pacific (Seoul)",
                "REGIONxTAG": "AP_NORTHEAST_2"
            },
            "ap-southeast-1": {
                "EC2xCONNECTxCIDR": "3.0.5.32/29",
                "EC2xREGION": "Asia Pacific (Singapore)",
                "REGIONxTAG": "AP_SOUTHEAST_1"
            },
            "ap-southeast-2": {
                "EC2xCONNECTxCIDR": "13.239.158.0/29",
                "EC2xREGION": "Asia Pacific (Sydney)",
                "REGIONxTAG": "AP_SOUTHEAST_2"
            },
            "ap-northeast-1": {
                "EC2xCONNECTxCIDR": "3.112.23.0/29",
                "EC2xREGION": "Asia Pacific (Tokyo)",
                "REGIONxTAG": "AP_NORTHEAST_1"
            },
            "ca-central-1": {
                "EC2xCONNECTxCIDR": "35.183.92.176/29",
                "EC2xREGION": "Canada (Central)",
                "REGIONxTAG": "CA_CENTRAL_1"
            },
            "eu-central-1": {
                "EC2xCONNECTxCIDR": "3.120.181.40/29",
                "EC2xREGION": "EU (Frankfurt)",
                "REGIONxTAG": "EU_CENTRAL_1"
            },
            "eu-west-1": {
                "EC2xCONNECTxCIDR": "18.202.216.48/29",
                "EC2xREGION": "EU (Ireland)",
                "REGIONxTAG": "EU_WEST_1"
            },
            "eu-west-2": {
                "EC2xCONNECTxCIDR": "3.8.37.24/29",
                "EC2xREGION": "EU (London)",
                "REGIONxTAG": "EU_WEST_2"
            },
            "eu-west-3": {
                "EC2xCONNECTxCIDR": "35.180.112.80/29",
                "EC2xREGION": "EU (Paris)",
                "REGIONxTAG": "EU_WEST_3"
            },
            "eu-north-1": {
                "EC2xCONNECTxCIDR": "13.48.4.200/30",
                "EC2xREGION": "EU (Stockholm)",
                "REGIONxTAG": "EU_NORTH_1"
            },
            "sa-east-1": {
                "EC2xCONNECTxCIDR": "13.48.4.200/30",
                "EC2xREGION": "South America (Sao Paulo)",
                "REGIONxTAG": "SA_EAST_1"
            }
        },
        "VariableMap": {
            "local": {
                "OPTIONSxTAG": "MANUAL",
                "PROJECTxTAG": "OPEN",
                "PLACEMENTxGROUPxSTRATEGY": "cluster",
                "INTERFACExSOURCExDESTxCHECK": false,
                "INSTANCExDISABLExAPIxTERMINATION": false,
                "INSTANCExMONITORING": false,
                "INSTANCExINSTANCExINITIATEDxSHUTDOWNxBEHAVIOR": "stop",
                "INSTANCExBLOCKxDEVICExNAME": "/dev/sda1",
                "INSTANCExEBSxDELETExONxTERMINATION": true,
                "INSTANCExEBSxVOLUMExTYPE": "gp2",
                "APPxTAG": "KEYSIGHT",
                "APPxVERSION": "10.00"
            }
        }
    },
    "Resources": {
        "PlacementGroup": {
            "Type": "AWS::EC2::PlacementGroup",
            "Properties": {
                "Strategy": {
                    "Fn::FindInMap": [
                        "VariableMap",
                        "local",
                        "PLACEMENTxGROUPxSTRATEGY"
                    ]
                }
            }
        },
        "MgmtSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": {
                    "Fn::Join": [
                        "_",
                        [
                            {
                                "Ref": "UserLoginTag"
                            },
                            {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "PROJECTxTAG"
                                ]
                            },
                            "MGMT_SECURITY_GROUP",
                            {
                                "Fn::FindInMap": [
                                    "RegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "REGIONxTAG"
                                ]
                            }
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VpcId"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "_",
                                [
                                    {
                                        "Ref": "UserLoginTag"
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "PROJECTxTAG"
                                        ]
                                    },
                                    "MGMT_SECURITY_GROUP",
                                    {
                                        "Fn::FindInMap": [
                                            "RegionMap",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "REGIONxTAG"
                                        ]
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "UserEmailTag"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "PROJECTxTAG"
                            ]
                        }
                    }
                ]
            }
        },
        "MgmtIngress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "MgmtSecurityGroup"
                },
                "IpProtocol": "-1",
                "SourceSecurityGroupId": {
                    "Ref": "MgmtSecurityGroup"
                }
            }
        },
        "MgmtIngress22": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "MgmtSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": 22,
                "ToPort": 22,
                "CidrIp": {
                    "Ref": "InboundIPv4CidrBlock"
                }
            }
        },
        "MgmtIngress443": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "MgmtSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": 443,
                "ToPort": 443,
                "CidrIp": {
                    "Ref": "InboundIPv4CidrBlock"
                }
            }
        },
        "MgmtIngress3389": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "MgmtSecurityGroup"
                },
                "IpProtocol": "tcp",
                "FromPort": 3389,
                "ToPort": 3389,
                "CidrIp": {
                    "Ref": "InboundIPv4CidrBlock"
                }
            }
        },
        "Test1SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": {
                    "Fn::Join": [
                        "_",
                        [
                            {
                                "Ref": "UserLoginTag"
                            },
                            {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "PROJECTxTAG"
                                ]
                            },
                            "TEST1_SECURITY_GROUP",
                            {
                                "Fn::FindInMap": [
                                    "RegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "REGIONxTAG"
                                ]
                            }
                        ]
                    ]
                },
                "VpcId": {
                    "Ref": "VpcId"
                },
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "InboundIPv4CidrBlock"
                        },
                        "Description": "HTTP port",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "_",
                                [
                                    {
                                        "Ref": "UserLoginTag"
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "PROJECTxTAG"
                                        ]
                                    },
                                    "TEST1_SECURITY_GROUP",
                                    {
                                        "Fn::FindInMap": [
                                            "RegionMap",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "REGIONxTAG"
                                        ]
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "UserEmailTag"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "PROJECTxTAG"
                            ]
                        }
                    }
                ]
            }
        },
        "Test1Ingress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "Test1SecurityGroup"
                },
                "IpProtocol": "-1",
                "SourceSecurityGroupId": {
                    "Ref": "Test1SecurityGroup"
                }
            }
        },
        "TestAppliance1Eth0": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "Description": {
                    "Fn::Join": [
                        "_",
                        [
                            {
                                "Ref": "UserLoginTag"
                            },
                            {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "PROJECTxTAG"
                                ]
                            },
                            {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "APPxTAG"
                                ]
                            },
                            "TESTAPPLIANCE1",
                            {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "APPxVERSION"
                                ]
                            },
                            "ETH0",
                            {
                                "Fn::FindInMap": [
                                    "RegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "REGIONxTAG"
                                ]
                            }
                        ]
                    ]
                },
                "SourceDestCheck": {
                    "Fn::FindInMap": [
                        "VariableMap",
                        "local",
                        "INTERFACExSOURCExDESTxCHECK"
                    ]
                },
                "SubnetId": {
                    "Ref": "MgmtSubnetId"
                },
                "GroupSet": [
                    {
                        "Ref": "MgmtSecurityGroup"
                    }
                ],
                "PrivateIpAddress": {
                    "Ref": "TestAppliance1Eth0PrivateIpAddress"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "_",
                                [
                                    {
                                        "Ref": "UserLoginTag"
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "PROJECTxTAG"
                                        ]
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "APPxTAG"
                                        ]
                                    },
                                    "TESTAPPLIANCE1",
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "APPxVERSION"
                                        ]
                                    },
                                    "ETH0",
                                    {
                                        "Fn::FindInMap": [
                                            "RegionMap",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "REGIONxTAG"
                                        ]
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "UserEmailTag"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "PROJECTxTAG"
                            ]
                        }
                    }
                ]
            }
        },
        "TestAppliance1Eth1": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "Description": {
                    "Fn::Join": [
                        "_",
                        [
                            {
                                "Ref": "UserLoginTag"
                            },
                            {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "PROJECTxTAG"
                                ]
                            },
                            {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "APPxTAG"
                                ]
                            },
                            "TESTAPPLIANCE1",
                            {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "APPxVERSION"
                                ]
                            },
                            "ETH1",
                            {
                                "Fn::FindInMap": [
                                    "RegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "REGIONxTAG"
                                ]
                            }
                        ]
                    ]
                },
                "SourceDestCheck": {
                    "Fn::FindInMap": [
                        "VariableMap",
                        "local",
                        "INTERFACExSOURCExDESTxCHECK"
                    ]
                },
                "SubnetId": {
                    "Ref": "Test1SubnetId"
                },
                "GroupSet": [
                    {
                        "Ref": "Test1SecurityGroup"
                    }
                ],
                "PrivateIpAddress": {
                    "Fn::Select": [
                        "0",
                        {
                            "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                        }
                    ]
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "1",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    },
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "2",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    },
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "3",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    },
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "4",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    },
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "5",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    },
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "6",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    },
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "7",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    },
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "8",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    },
                    {
                        "PrivateIpAddress": {
                            "Fn::Select": [
                                "9",
                                {
                                    "Ref": "TestAppliance1Eth1PrivateIpAddresses"
                                }
                            ]
                        },
                        "Primary": false
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "_",
                                [
                                    {
                                        "Ref": "UserLoginTag"
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "PROJECTxTAG"
                                        ]
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "APPxTAG"
                                        ]
                                    },
                                    "TESTAPPLIANCE1",
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "APPxVERSION"
                                        ]
                                    },
                                    "ETH1",
                                    {
                                        "Fn::FindInMap": [
                                            "RegionMap",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "REGIONxTAG"
                                        ]
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "UserEmailTag"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "PROJECTxTAG"
                            ]
                        }
                    }
                ]
            }
        },
        "TestAppliance1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "DisableApiTermination": {
                    "Fn::FindInMap": [
                        "VariableMap",
                        "local",
                        "INSTANCExDISABLExAPIxTERMINATION"
                    ]
                },
                "InstanceInitiatedShutdownBehavior": {
                    "Fn::FindInMap": [
                        "VariableMap",
                        "local",
                        "INSTANCExINSTANCExINITIATEDxSHUTDOWNxBEHAVIOR"
                    ]
                },
                "ImageId": "resolve:ssm:/aws/service/marketplace/prod-dgn57kcde5sii/latest",
                "InstanceType": {
                    "Ref": "TestApplianceInstanceType"
                },
                "Monitoring": {
                    "Fn::FindInMap": [
                        "VariableMap",
                        "local",
                        "INSTANCExMONITORING"
                    ]
                },
                "KeyName": {
                    "Ref": "IxClientSSHKey"
                },
                "PlacementGroupName": {
                    "Ref": "PlacementGroup"
                },
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "_",
                                [
                                    {
                                        "Ref": "UserLoginTag"
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "PROJECTxTAG"
                                        ]
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "APPxTAG"
                                        ]
                                    },
                                    "TESTAPPLIANCE1",
                                    {
                                        "Fn::FindInMap": [
                                            "VariableMap",
                                            "local",
                                            "APPxVERSION"
                                        ]
                                    },
                                    {
                                        "Fn::FindInMap": [
                                            "RegionMap",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "REGIONxTAG"
                                        ]
                                    }
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "Owner",
                        "Value": {
                            "Ref": "UserEmailTag"
                        }
                    },
                    {
                        "Key": "Options",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "OPTIONSxTAG"
                            ]
                        }
                    },
                    {
                        "Key": "Project",
                        "Value": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "PROJECTxTAG"
                            ]
                        }
                    }
                ],
                "UserData": "",
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "TestAppliance1Eth0"
                        },
                        "DeviceIndex": "0"
                    },
                    {
                        "NetworkInterfaceId": {
                            "Ref": "TestAppliance1Eth1"
                        },
                        "DeviceIndex": "1"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": {
                            "Fn::FindInMap": [
                                "VariableMap",
                                "local",
                                "INSTANCExBLOCKxDEVICExNAME"
                            ]
                        },
                        "Ebs": {
                            "DeleteOnTermination": {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "INSTANCExEBSxDELETExONxTERMINATION"
                                ]
                            },
                            "VolumeType": {
                                "Fn::FindInMap": [
                                    "VariableMap",
                                    "local",
                                    "INSTANCExEBSxVOLUMExTYPE"
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "TestAppliance1Eth0ElasticIp": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": [
                "TestAppliance1"
            ],
            "Properties": {
                "Domain": "vpc"
            }
        },
        "TestAppliance1Eth0ElasticIpAssociation": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "TestAppliance1Eth0ElasticIp",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "TestAppliance1Eth0"
                }
            }
        },
        "EC2InstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2ReadOnlyAccessRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "EC2ReadOnlyAccessRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"
                ],
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "User Tag Configuration"
                    },
                    "Parameters": [
                        "UserEmailTag",
                        "UserLoginTag"
                    ]
                },
                {
                    "Label": {
                        "default": "Virtual Private Cloud Configuration"
                    },
                    "Parameters": [
                        "VpcId",
                        "MgmtSubnetId",
                        "Test1SubnetId"
                    ]
                },
                {
                    "Label": {
                        "default": "Keysight Client Instance Configuration"
                    },
                    "Parameters": [
                        "IxClientSSHKey"
                    ]
                },
                {
                    "Label": {
                        "default": "TestAppliance Instance Configuration"
                    },
                    "Parameters": [
                        "TestApplianceInstanceType",
                        "TestAppliance1Eth0PrivateIpAddress"
                    ]
                },
                {
                    "Label": {
                        "default": "Security Group Configuration"
                    },
                    "Parameters": [
                        "InboundIPv4CidrBlock"
                    ]
                }
            ],
            "ParameterLabels": {
                "UserEmailTag": {
                    "default": "User Email Tag"
                },
                "UserLoginTag": {
                    "default": "User Login Tag"
                },
                "VpcId": {
                    "default": "VPC ID"
                },
                "MgmtSubnetId": {
                    "default": "Management Subnet ID"
                },
                "Test1SubnetId": {
                    "default": "Test1 Subnet ID"
                },
                "IxClientSSHKey": {
                    "default": "Keysight Client SSH Key"
                },
                "TestApplianceInstanceType": {
                    "default": "TestAppliance Instance Type"
                },
                "TestAppliance1Eth0PrivateIpAddress": {
                    "default": "TestAppliance1 Eth0 Private IP Address"
                },
                "TestAppliance1Eth1PrivateIpAddresses": {
                    "default": "TestAppliance1 Eth1 Private IP Address CSV List"
                },
                "InboundIPv4CidrBlock": {
                    "default": "Inbound IPv4 CIDR Block"
                }
            }
        }
    },
    "Parameters": {
        "UserEmailTag": {
            "Description": "Email address tag of user creating the stack",
            "MinLength": "14",
            "Type": "String",
			"Default": "demo@keysight.com"
        },
        "UserLoginTag": {
            "Description": "Login ID tag of user creating the stack",
            "MinLength": "4",
            "Type": "String", 
			"Default": "Demo"
        },
        "VpcId": {
            "Description": "Virtual Private Cloud ID",
            "Type": "AWS::EC2::VPC::Id",
			"Default": "vpc-076f8c78961875c34"
        },
        "MgmtSubnetId": {
            "Description": "Management Subnet ID",
            "Type": "AWS::EC2::Subnet::Id",
			"Default": "subnet-09d936d34a93f7914"
        },
        "Test1SubnetId": {
            "Description": "Test1 Subnet ID",
            "Type": "AWS::EC2::Subnet::Id",
			"Default": "subnet-0082ab2d4e0960f23"
        },
        "IxClientSSHKey": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access",
            "Type": "AWS::EC2::KeyPair::KeyName",
			"Default": "ixvm-frankfurt-key-pair"
        },
        "TestApplianceInstanceType": {
            "Description": "Instance type of Test Appliance VM",
            "Type": "String",
            "AllowedValues": [
                "t3.xlarge",
                "t3.2xlarge",
                "t3a.xlarge",
                "t3a.2xlarge",
                "m5.xlarge",
                "m5.2xlarge",
                "m5.4xlarge",
                "m5.8xlarge",
                "m5.12xlarge",
                "m5.16xlarge",
                "m5.24xlarge",
                "m5a.xlarge",
                "m5a.2xlarge",
                "m5a.4xlarge",
                "m5a.8xlarge",
                "m5a.12xlarge",
                "m5a.16xlarge",
                "m5a.24xlarge",
                "m5n.xlarge",
                "m5n.2xlarge",
                "m5n.4xlarge",
                "m5n.8xlarge",
                "m5n.12xlarge",
                "m5n.16xlarge",
                "m5n.24xlarge",
                "m6i.xlarge",
                "m6i.2xlarge",
                "m6i.4xlarge",
                "m6i.8xlarge",
                "m6i.12xlarge",
                "m6i.16xlarge",
                "m6i.24xlarge",
                "m6i.32xlarge",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge",
                "c5.12xlarge",
                "c5.18xlarge",
                "c5.24xlarge",
                "c5a.xlarge",
                "c5a.2xlarge",
                "c5a.4xlarge",
                "c5a.8xlarge",
                "c5a.12xlarge",
                "c5a.16xlarge",
                "c5a.24xlarge",
                "c5n.xlarge",
                "c5n.2xlarge",
                "c5n.4xlarge",
                "c5n.9xlarge",
                "c5n.18xlarge",
                "c6i.xlarge",
                "c6i.2xlarge",
                "c6i.4xlarge",
                "c6i.8xlarge",
                "c6i.12xlarge",
                "c6i.16xlarge",
                "c6i.24xlarge",
                "c6i.32xlarge"
            ],
            "Default": "c5n.xlarge"
        },
        "TestAppliance1Eth0PrivateIpAddress": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "must be a valid IP Address of the form x.x.x.x",
            "Description": "TestAppliance1 Eth0 Management Subnet IP Address",
            "Type": "String",
            "Default": "10.0.0.80"
        },
        "TestAppliance1Eth1PrivateIpAddresses": {
            "Description": "TestAppliance1 Eth1 Test1 Subnet IP Address CSV list",
            "Type": "CommaDelimitedList",
            "Default": "10.0.1.80,10.0.1.81,10.0.1.82,10.0.1.83,10.0.1.84,10.0.1.85,10.0.1.86,10.0.1.87,10.0.1.88,10.0.1.89"
        },
        "InboundIPv4CidrBlock": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Description": "IP Address /32 or IP CIDR range connecting inbound to Keysight Client",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String", 
			"Default": "213.249.122.0/24"
        }
    },
    "Outputs": {
        "TestAppliance1": {
            "Description": "KEY_TESTAPPLIANCE1_PRIVATE_IP",
            "Value": {
                "Fn::GetAtt": [
                    "TestAppliance1",
                    "PrivateIp"
                ]
            }
        }
    }
}
